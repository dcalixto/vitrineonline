user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
#     passenger_ruby /usr/bin/ruby1.9.1;

     passenger_root  /home/ubuntu/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/passenger-5.0.25;
     passenger_ruby  /home/ubuntu/.rbenv/shims/ruby;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        server_name vitrineonline.com;
        rewrite ^(.*) https://vitrineonline.com/$1 permanent;
        root /home/ubuntu/vitrineonline/current/public;
        passenger_enabled on;
        rails_env production;
        #charset koi8-r;

               pagespeed on;

               # Needs to exist and be writable by nginx.  Use tmpfs for best performance.
              pagespeed FileCachePath /var/ngx_pagespeed_cache;

              # Ensure requests for pagespeed optimized resources go to the pagespeed handler
              # and no extraneous headers get set.
              location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
              add_header "" "";
               }
             location ~ "^/pagespeed_static/" { }
             location ~ "^/ngx_pagespeed_beacon$" { }



                location ~ ^/(assets)/  {
                  gzip_static on;
                  expires max;
                  add_header Cache-Control public;
                }


  location ^~ /faye {
    proxy_pass         http://127.0.0.1:9292/faye;
    proxy_redirect     off;
    proxy_set_header   Upgrade    $http_upgrade;
    proxy_set_header   Connection "upgrade";
    proxy_http_version 1.1;
    proxy_buffering    off;
    proxy_cache_bypass $http_pragma $http_authorization;
    proxy_no_cache     $http_pragma $http_authorization;
  }







                #error_page  404              /404.html;

                # redirect server error pages to the static page /50x.html
                #
                error_page   500 502 503 504  /50x.html;
                location = /50x.html {
                    root   html;
                }

            }


            # another virtual host using mix of IP-, name-, and port-based configuration
            #
            #server {
            #    listen       8000;
            #    listen       somename:8080;
            #    server_name  somename  alias  another.alias;

            #    location / {
            #        root   html;
            #        index  index.html index.htm;

            # HTTPS server
               #
               server {
                   listen       443 ssl;
                   server_name  vitrineonline.com;
                    ssl on;
                   ssl_certificate      /etc/nginx/ssl/ssl-bundle.crt;
                   ssl_certificate_key  /etc/nginx/ssl/vitrineonline.com.key;
                   root /home/ubuntu/vitrineonline/current/public;
                   passenger_enabled on;
                   rails_env production;
               #    ssl_session_cache    shared:SSL:1m;
               #    ssl_session_timeout  5m;

                   ssl_ciphers  HIGH:!aNULL:!MD5;
                   ssl_prefer_server_ciphers  on;
                  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
                pagespeed on;

                  # Needs to exist and be writable by nginx.  Use tmpfs for best performance.
                 pagespeed FileCachePath /var/ngx_pagespeed_cache;

                 # Ensure requests for pagespeed optimized resources go to the pagespeed handler
                 # and no extraneous headers get set.
                 location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
                 add_header "" "";
                  }
                location ~ "^/pagespeed_static/" { }
                location ~ "^/ngx_pagespeed_beacon$" { }



                   location ~ ^/(assets)/  {
                     gzip_static on;
                     expires max;
                     add_header Cache-Control public;
                   }



                   #error_page  404              /404.html;

                   # redirect server error pages to the static page /50x.html
                   #
                   # Ensure requests for pagespeed optimized resources go to the pagespeed handler
                       # and no extraneous headers get set.
                       location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
                       add_header "" "";
                        }
                      location ~ "^/pagespeed_static/" { }
                      location ~ "^/ngx_pagespeed_beacon$" { }



                         location ~ ^/(assets)/  {
                           gzip_static on;
                           expires max;
                           add_header Cache-Control public;
                         }



                         #error_page  404              /404.html;

                         # redirect server error pages to the static page /50x.html
                         #
                         error_page   500 502 503 504  /50x.html;
                         location = /50x.html {
                             root   html;
                         }


                 }
                 }
