
user  root;
worker_processes  1;


error_log  /data/nginx/error.log;



events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}




http {
    include       mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    passenger_root  /home/ubuntu/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/passenger-5.0.26;
    passenger_ruby  /home/ubuntu/.rbenv/shims/ruby;

    include /etc/nginx/naxsi_core.rules;

    access_log  /data/nginx/access.log;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay on;
    keepalive_timeout  65;
    keepalive_requests 100000;


    client_body_buffer_size      128k;
    client_max_body_size         10m;
    client_header_buffer_size    1k;
    large_client_header_buffers  4 4k;
    output_buffers               1 32k;
    postpone_output              1460;


    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout           3m;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 5;
    open_file_cache_errors off;

    gzip on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_proxied any;
    gzip_buffers 16 8k;
    gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    gzip_vary on;

    server {
        listen       80;

        server_name vitrineonline.com;
        root /data/vitrineonline/current/public;
        passenger_enabled on;
        rails_env production;

#charset koi8-r;

        pagespeed on;


        location / {
            more_set_headers 'Server: anon'; # replace the default 'nginx + Passenger'
            more_set_headers 'X-Powered-By';
            include /etc/nginx/naxsi.rules;
#include /etc/nginx/naxsi_whitelist.rules;
        }




# Needs to exist and be writable by nginx.  Use tmpfs for best performance.
        pagespeed FileCachePath /var/ngx_pagespeed_cache;

# Ensure requests for pagespeed optimized resources go to the pagespeed handler
# and no extraneous headers get set.
        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
            add_header "" "";
        }
        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }



        location ~ ^/(assets)/  {
            gzip_static on;
            expires max;
            add_header Cache-Control public;



        }


        location ^~ /faye {
            proxy_pass         http://127.0.0.1:9292/faye;
            proxy_redirect     off;
            proxy_set_header   Upgrade    $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_http_version 1.1;
            proxy_buffering    off;
            proxy_cache_bypass $http_pragma $http_authorization;
            proxy_no_cache     $http_pragma $http_authorization;
        }



#error_page  404              /404.html;


# redirect server error pages to the static page /50x.html
#
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }







        set $block_sql_status 0;
        if ($query_string ~ "union.*select.*\(") {
            set $block_sql_status 1;
        }
        if ($query_string ~ "union.*all.*select.*") {
            set $block_sql_status 1;
        }
        if ($query_string ~ "concat.*\(") {
            set $block_sql_status 1;
        }
        if ($block_sql_status = 1) {
            return 403;
        }





    }



# HTTPS server
#     server {

#listen 443 ssl http2;


#                server_name  vitrineonline.com;
#                ssl on;
#             ssl_certificate      /etc/nginx/ssl/ssl-bundle.crt;
#             ssl_certificate_key  /etc/nginx/ssl/vitrineonline.com.key;
#            root /home/ubuntu/vitrineonline/current/public;
#           passenger_enabled on;
#          rails_env production;
#         ssl_session_cache    shared:SSL:50m;
#        ssl_session_timeout  1d;
#      ssl_session_tickets off;
#      ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
#       ssl_prefer_server_ciphers  on;
#     ssl_protocols TLSv1.1 TLSv1.2;
#    add_header Strict-Transport-Security max-age=15768000;

# pagespeed on;

# Needs to exist and be writable by nginx.  Use tmpfs for best performance.
#                pagespeed FileCachePath /var/ngx_pagespeed_cache;

# Ensure requests for pagespeed optimized resources go to the pagespeed handler
# and no extraneous headers get set.
#               location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
#              add_header "" "";
#              }
#           location ~ "^/pagespeed_static/" { }
#          location ~ "^/ngx_pagespeed_beacon$" { }



#            location ~ ^/(assets)/  {
#            gzip_static on;
#            expires max;
   #   add_header Cache-Control public;
#        }






#error_page  404              /404.html;

# redirect server error pages to the static page /50x.html
#
# error_page   500 502 503 504  /50x.html;
#location = /50x.html {
#     root   html;
# }


#     }


}





